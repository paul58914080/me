{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to my notes","title":"About me"},{"location":"pages/backend/hexagonal-architecture/","text":"","title":"Hexagonal architecture"},{"location":"pages/frontend/angular/","text":"angular-cli provides an amazing tooling for scaffolding, building, testing and deploying Angular applications. However, when you want to perform additional tasks like the following, the tooling is not enough: Linting SCSS, HTML Format with Prettier Commit message linting Pre-commit hooks Mock server Translations Configuration management Logging In this article, we will see how to add these features to an Angular application created with angular-cli. Scaffold base angular \u00b6 Generate the base Angular application with the following command: ng new [my-app] --package-manager=yarn --style=scss --routing=true --ssr=false Read more More about this command in the official documentation . Angular ESLint \u00b6 Add ESLint dependency to the project with the following command: ng add @angular-eslint/schematics Read more More about this command in the official documentation . Lint SCSS \u00b6 Add SCSS linting dependencies to the project with the following command: yarn add -D stylelint stylelint-config-sass-guidelines stylelint-scss Add the configuration in .lint/.stylelintrc.json : .lint/.stylelintrc.json { \"extends\" : \"stylelint-config-sass-guidelines\" , \"plugins\" : [ \"stylelint-scss\" ], \"rules\" : { \"color-hex-length\" : \"long\" , \"selector-pseudo-element-no-unknown\" : [ true , { \"ignorePseudoElements\" : [ \"ng-deep\" ] } ] } } Add the script in package.json : package.json { \"scripts\" : { \"lint:styles\" : \"stylelint --config .lint/.stylelintrc.json src/app/**/*.scss\" } } Lint HTML \u00b6 Add HTML linting dependency to the project with the following command: yarn add -D htmlhint Add the configuration in .lint/.htmlhintrc : .lint/.htmlhintrc { \"tagname-lowercase\" : true , \"attr-lowercase\" : true , \"attr-value-double-quotes\" : true , \"attr-value-not-empty\" : false , \"attr-no-duplication\" : true , \"doctype-first\" : false , \"tag-pair\" : true , \"tag-self-close\" : false , \"spec-char-escape\" : true , \"id-unique\" : true , \"src-not-empty\" : true , \"title-require\" : true , \"alt-require\" : true , \"doctype-html5\" : true , \"id-class-value\" : \"dash\" , \"style-disabled\" : true , \"inline-style-disabled\" : true , \"inline-script-disabled\" : true , \"space-tab-mixed-disabled\" : \"space\" , \"id-class-ad-disabled\" : true , \"href-abs-or-rel\" : false , \"attr-unsafe-chars\" : true } Add the script in package.json : package.json { \"scripts\" : { \"lint:html\" : \"htmlhint --config .lint/.htmlhintrc src/app/**/*.html\" } } Update ng lint script \u00b6 package.json { \"scripts\": { - \"lint\": \"ng lint\" + \"lint:ng\": \"ng lint\" } } Run all linters \u00b6 In order to run all linters we need a dependency npm-run-all. Add the following dependency to the project with the following command: yarn add -D npm-run-all Add the script in package.json : package.json { \"scripts\" : { \"lint\" : \"npm-run-all --parallel lint:ng lint:styles lint:html\" } } Format with Prettier \u00b6 Add Prettier dependencies to the project with the following command: yarn add -D prettier pretty-quick Add the configuration in .prettierrc : .prettierrc { \"printWidth\" : 120 , \"tabWidth\" : 2 , \"useTabs\" : false , \"semi\" : true , \"singleQuote\" : true , \"bracketSpacing\" : true } If you wish to ignore some files, add the configuration in .prettierignore : .prettierignore package.json package-lock.json yarn yarn.error.log Format staged files \u00b6 Add lint-staged dependency to the project with the following command: yarn add -D lint-staged Add the configuration in .lintstagedrc.json : .lintstagedrc.json { \"**/*.{ts,js}\" : \"eslint --cache --fix\" , \"*\" : \"prettier --cache --ignore-unknown --write\" } For formatting and linting together add the script in package.json : package.json { \"scripts\" : { \"format:prettier\" : \"lint-staged\" , \"format:all\" : \"run-s format:prettier lint\" } } Commit message linting \u00b6 Add commitlint dependencies to the project with the following command: yarn add -D @commitlint/{config-conventional,cli} Add the configuration in commitlint.config.js : commitlint.config.js module . exports = { extends : [ '@commitlint/config-conventional' ]}; Pre-commit hooks \u00b6 Add husky dependency to the project with the following command: yarn add -D husky Initialize husky with the following command: npx husky install Update pre-commit hooks with the following command: npx husky add .husky/pre-commit \"yarn format:all\" Update pre-push hooks with the following command: npx husky add .husky/pre-push \"yarn test\" Update commit-msg hooks with the following command: npx husky add .husky/commit-msg \"yarn commitlint --edit $1\" Update the scripts in package.json for initializing husky: package.json { \"scripts\" : { \"prepare\" : \"husky install\" } } Mock server \u00b6 Add json-server dependency to the project with the following command: yarn add -D json-server","title":"Scaffold angular"},{"location":"pages/frontend/angular/#scaffold-base-angular","text":"Generate the base Angular application with the following command: ng new [my-app] --package-manager=yarn --style=scss --routing=true --ssr=false Read more More about this command in the official documentation .","title":"Scaffold base angular"},{"location":"pages/frontend/angular/#angular-eslint","text":"Add ESLint dependency to the project with the following command: ng add @angular-eslint/schematics Read more More about this command in the official documentation .","title":"Angular ESLint"},{"location":"pages/frontend/angular/#lint-scss","text":"Add SCSS linting dependencies to the project with the following command: yarn add -D stylelint stylelint-config-sass-guidelines stylelint-scss Add the configuration in .lint/.stylelintrc.json : .lint/.stylelintrc.json { \"extends\" : \"stylelint-config-sass-guidelines\" , \"plugins\" : [ \"stylelint-scss\" ], \"rules\" : { \"color-hex-length\" : \"long\" , \"selector-pseudo-element-no-unknown\" : [ true , { \"ignorePseudoElements\" : [ \"ng-deep\" ] } ] } } Add the script in package.json : package.json { \"scripts\" : { \"lint:styles\" : \"stylelint --config .lint/.stylelintrc.json src/app/**/*.scss\" } }","title":"Lint SCSS"},{"location":"pages/frontend/angular/#lint-html","text":"Add HTML linting dependency to the project with the following command: yarn add -D htmlhint Add the configuration in .lint/.htmlhintrc : .lint/.htmlhintrc { \"tagname-lowercase\" : true , \"attr-lowercase\" : true , \"attr-value-double-quotes\" : true , \"attr-value-not-empty\" : false , \"attr-no-duplication\" : true , \"doctype-first\" : false , \"tag-pair\" : true , \"tag-self-close\" : false , \"spec-char-escape\" : true , \"id-unique\" : true , \"src-not-empty\" : true , \"title-require\" : true , \"alt-require\" : true , \"doctype-html5\" : true , \"id-class-value\" : \"dash\" , \"style-disabled\" : true , \"inline-style-disabled\" : true , \"inline-script-disabled\" : true , \"space-tab-mixed-disabled\" : \"space\" , \"id-class-ad-disabled\" : true , \"href-abs-or-rel\" : false , \"attr-unsafe-chars\" : true } Add the script in package.json : package.json { \"scripts\" : { \"lint:html\" : \"htmlhint --config .lint/.htmlhintrc src/app/**/*.html\" } }","title":"Lint HTML"},{"location":"pages/frontend/angular/#update-ng-lint-script","text":"package.json { \"scripts\": { - \"lint\": \"ng lint\" + \"lint:ng\": \"ng lint\" } }","title":"Update ng lint script"},{"location":"pages/frontend/angular/#run-all-linters","text":"In order to run all linters we need a dependency npm-run-all. Add the following dependency to the project with the following command: yarn add -D npm-run-all Add the script in package.json : package.json { \"scripts\" : { \"lint\" : \"npm-run-all --parallel lint:ng lint:styles lint:html\" } }","title":"Run all linters"},{"location":"pages/frontend/angular/#format-with-prettier","text":"Add Prettier dependencies to the project with the following command: yarn add -D prettier pretty-quick Add the configuration in .prettierrc : .prettierrc { \"printWidth\" : 120 , \"tabWidth\" : 2 , \"useTabs\" : false , \"semi\" : true , \"singleQuote\" : true , \"bracketSpacing\" : true } If you wish to ignore some files, add the configuration in .prettierignore : .prettierignore package.json package-lock.json yarn yarn.error.log","title":"Format with Prettier"},{"location":"pages/frontend/angular/#format-staged-files","text":"Add lint-staged dependency to the project with the following command: yarn add -D lint-staged Add the configuration in .lintstagedrc.json : .lintstagedrc.json { \"**/*.{ts,js}\" : \"eslint --cache --fix\" , \"*\" : \"prettier --cache --ignore-unknown --write\" } For formatting and linting together add the script in package.json : package.json { \"scripts\" : { \"format:prettier\" : \"lint-staged\" , \"format:all\" : \"run-s format:prettier lint\" } }","title":"Format staged files"},{"location":"pages/frontend/angular/#commit-message-linting","text":"Add commitlint dependencies to the project with the following command: yarn add -D @commitlint/{config-conventional,cli} Add the configuration in commitlint.config.js : commitlint.config.js module . exports = { extends : [ '@commitlint/config-conventional' ]};","title":"Commit message linting"},{"location":"pages/frontend/angular/#pre-commit-hooks","text":"Add husky dependency to the project with the following command: yarn add -D husky Initialize husky with the following command: npx husky install Update pre-commit hooks with the following command: npx husky add .husky/pre-commit \"yarn format:all\" Update pre-push hooks with the following command: npx husky add .husky/pre-push \"yarn test\" Update commit-msg hooks with the following command: npx husky add .husky/commit-msg \"yarn commitlint --edit $1\" Update the scripts in package.json for initializing husky: package.json { \"scripts\" : { \"prepare\" : \"husky install\" } }","title":"Pre-commit hooks"},{"location":"pages/frontend/angular/#mock-server","text":"Add json-server dependency to the project with the following command: yarn add -D json-server","title":"Mock server"}]}